package exam;

import exam02.Book;

import java.util.Arrays;

public class exam05 {
    public static void main(String[] args) {

        //기본 자료형
        // 숫자를 담을수 있는 자료형 BYTE int long
        // 정수 실수 논리 문자형 float double boolean(1) 문자형ㄴ2~3
        // 참조 자료형
        // 주소값
        //
        String[] fruits ={"사과","오랜지","포도"};
        System.out.println(Arrays.toString(fruits));

        //객체 오브 잭트 사물 대상
        // 속성을 가지고 있다 도르
        //속성(변수) 하고 행위 함수(기능0)
        //기능 완성 - 다른 객체 간의 협동 ,상호작용 ->객체지향 프로그래밍
        //객체를 만들기위한 설계도 클래스 만들기
        //변수와 함수 정의 변수와 함수
        //class  클래스 명  {
        // 변수 정의
        // 함수 정의
        // new 클래스명 aud ()
        // 클래스에 정의 된 변수 정의 -> 객체 생성 ->변수
        // 변수의 정의 ?  공간의 이름 메모리
        // 객체에 생성된 변수 마침표 연산을 통하여 접근 h1.title
        // 매서드도 마침표 연산을 통하여 접근이 가능하다.
        // 클래스에 정의 -설계도 코드에 불가 ->객체 생성 -> 매모리에 공간을 할당받는다
        // 인스턴스 객-체
        // 변수에 대한 정의
        // 맴버 변수 정의
        // 클래스 이름 짓는 규칙
        // 변수와 제약 비슷
        //관례 첫글자가 대문자
        // 여러 단어로 구성된 클래스명
        // 마침표를 통해서 다른폴더 다른클래스 접근
        // import 객체간의 함수 on 클래스에 정의 된 함수를 매서드 라고 부른다
        // 함수 정의 하기  2x + y =180;
        // box
        // 접근제어자 반환값 자료형
       // [접근제한자] [반환타입] [메서드이름](매개변수) {
                // 메서드 내부에서 수행할 작업들
                // 반환값이 있을 경우 return 문으로 값을 반환 ex) return 값 ;
      //  }
        //
        // }





    }
}
